// <auto-generated />
using System;
using EFExample.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EFExample.Migrations
{
    [DbContext(typeof(Database))]
    partial class DatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EFExample.Data.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<decimal>("DistanceKm")
                        .HasColumnType("numeric")
                        .HasColumnName("distance_km");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_races");

                    b.HasIndex("Date")
                        .HasDatabaseName("ix_races_date");

                    b.ToTable("races", (string)null);
                });

            modelBuilder.Entity("EFExample.Data.RaceResult", b =>
                {
                    b.Property<int>("RunnerId")
                        .HasColumnType("integer")
                        .HasColumnName("runner_id");

                    b.Property<int>("RaceId")
                        .HasColumnType("integer")
                        .HasColumnName("race_id");

                    b.Property<int>("BibNumber")
                        .HasColumnType("integer")
                        .HasColumnName("bib_number");

                    b.Property<int>("Position")
                        .HasColumnType("integer")
                        .HasColumnName("position");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("interval")
                        .HasColumnName("time");

                    b.HasKey("RunnerId", "RaceId")
                        .HasName("pk_race_result");

                    b.HasIndex("BibNumber")
                        .HasDatabaseName("ix_race_result_bib_number");

                    b.HasIndex("RaceId")
                        .HasDatabaseName("ix_race_result_race_id");

                    b.ToTable("race_result", (string)null);
                });

            modelBuilder.Entity("EFExample.Data.Runner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("country");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_runners");

                    b.HasIndex("Email")
                        .HasDatabaseName("ix_runners_email");

                    b.ToTable("runners", (string)null);
                });

            modelBuilder.Entity("RaceRunner", b =>
                {
                    b.Property<int>("RacesId")
                        .HasColumnType("integer")
                        .HasColumnName("races_id");

                    b.Property<int>("RunnersId")
                        .HasColumnType("integer")
                        .HasColumnName("runners_id");

                    b.HasKey("RacesId", "RunnersId")
                        .HasName("pk_race_runner");

                    b.HasIndex("RunnersId")
                        .HasDatabaseName("ix_race_runner_runners_id");

                    b.ToTable("race_runner", (string)null);
                });

            modelBuilder.Entity("EFExample.Data.RaceResult", b =>
                {
                    b.HasOne("EFExample.Data.Race", "Race")
                        .WithMany("RaceResults")
                        .HasForeignKey("RaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_race_result_races_race_id");

                    b.HasOne("EFExample.Data.Runner", "Runner")
                        .WithMany("RaceResults")
                        .HasForeignKey("RunnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_race_result_runners_runner_id");

                    b.Navigation("Race");

                    b.Navigation("Runner");
                });

            modelBuilder.Entity("RaceRunner", b =>
                {
                    b.HasOne("EFExample.Data.Race", null)
                        .WithMany()
                        .HasForeignKey("RacesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_race_runner_races_races_id");

                    b.HasOne("EFExample.Data.Runner", null)
                        .WithMany()
                        .HasForeignKey("RunnersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_race_runner_runners_runners_id");
                });

            modelBuilder.Entity("EFExample.Data.Race", b =>
                {
                    b.Navigation("RaceResults");
                });

            modelBuilder.Entity("EFExample.Data.Runner", b =>
                {
                    b.Navigation("RaceResults");
                });
#pragma warning restore 612, 618
        }
    }
}
